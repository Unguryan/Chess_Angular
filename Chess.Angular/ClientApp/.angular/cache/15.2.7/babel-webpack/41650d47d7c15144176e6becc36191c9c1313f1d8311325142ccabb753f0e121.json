{"ast":null,"code":"import { X_axic } from '../models/cellPropeties';\nimport { UnitType } from '../models/chessUnit';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./board.service\";\nimport * as i2 from \"@angular/common\";\nfunction BoardComponent_div_1_div_1_img_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 6);\n  }\n  if (rf & 2) {\n    const item_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"src\", ctx_r4.GetUnitImage(item_r3), i0.ɵɵsanitizeUrl);\n  }\n}\nfunction BoardComponent_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, BoardComponent_div_1_div_1_img_1_Template, 1, 1, \"img\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵclassProp(\"cellWhite\", item_r3.Color == 0)(\"cellBlack\", item_r3.Color == 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r3.Unit != null);\n  }\n}\nfunction BoardComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, BoardComponent_div_1_div_1_Template, 2, 5, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", row_r1);\n  }\n}\nexport class BoardComponent {\n  constructor(boardService) {\n    this.boardService = boardService;\n  }\n  ngOnInit() {\n    this.board = this.boardService.CreateBoard();\n  }\n  TestX(x) {\n    return X_axic[x];\n  }\n  GetUnitImage(cell) {\n    if (cell.Unit == null) {\n      return null;\n    }\n    var color = cell.Unit.Color == 0 ? \"White\" : \"Black\";\n    var type = UnitType[cell.Unit.Type];\n    return `assets/img/${color}_${type}.png`;\n  }\n}\nBoardComponent.ɵfac = function BoardComponent_Factory(t) {\n  return new (t || BoardComponent)(i0.ɵɵdirectiveInject(i1.BoardService));\n};\nBoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BoardComponent,\n  selectors: [[\"app-board\"]],\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"container\"], [\"class\", \"row\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [\"class\", \"text-center\", 3, \"cellWhite\", \"cellBlack\", 4, \"ngFor\", \"ngForOf\"], [1, \"text-center\"], [\"class\", \"imgCell\", 3, \"src\", 4, \"ngIf\"], [1, \"imgCell\", 3, \"src\"]],\n  template: function BoardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, BoardComponent_div_1_Template, 2, 1, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.board);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  styles: [\".cell[_ngcontent-%COMP%] {\\r\\n    width: 75px;\\r\\n    height: 75px;\\r\\n    border: 1px solid grey;\\r\\n    \\r\\n}\\r\\n\\r\\n.imgCell[_ngcontent-%COMP%]{\\r\\n    width: 65px;\\r\\n    height: 65px;\\r\\n}\\r\\n\\r\\n.cellWhite[_ngcontent-%COMP%] {\\r\\n    background-color: azure;\\r\\n}\\r\\n\\r\\n.cellBlack[_ngcontent-%COMP%] {\\r\\n    background-color: green;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2hlc3MvYm9hcmQvYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0lBQ1osc0JBQXNCOztBQUUxQjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksdUJBQXVCO0FBQzNCIiwic291cmNlc0NvbnRlbnQiOlsiLmNlbGwge1xyXG4gICAgd2lkdGg6IDc1cHg7XHJcbiAgICBoZWlnaHQ6IDc1cHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCBncmV5O1xyXG4gICAgXHJcbn1cclxuXHJcbi5pbWdDZWxse1xyXG4gICAgd2lkdGg6IDY1cHg7XHJcbiAgICBoZWlnaHQ6IDY1cHg7XHJcbn1cclxuXHJcbi5jZWxsV2hpdGUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYXp1cmU7XHJcbn1cclxuXHJcbi5jZWxsQmxhY2sge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAGA,SAASA,MAAM,QAAQ,yBAAyB;AAChD,SAASC,QAAQ,QAAQ,qBAAqB;;;;;;ICAlCC,yBAA2E;;;;;IAA5CA,oEAA0B;;;;;IAF7DA,8BAA2H;IAEvHA,2EAA2E;IAC/EA,iBAAM;;;;IAH6CA,+CAAmC;IAE5EA,eAAuB;IAAvBA,2CAAuB;;;;;IAHrCA,8BAA2C;IACvCA,qEAGM;IACVA,iBAAM;;;;IAJqBA,eAAM;IAANA,gCAAM;;;ADSrC,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;EAChC;EAEAC,QAAQ;IACN,IAAI,CAACC,KAAK,GAAG,IAAI,CAACF,YAAY,CAACG,WAAW,EAAE;EAC9C;EAEAC,KAAK,CAACC,CAAS;IACb,OAAOV,MAAM,CAACU,CAAC,CAAC;EAClB;EAEAC,YAAY,CAACC,IAAe;IAC1B,IAAGA,IAAI,CAACC,IAAI,IAAI,IAAI,EAAC;MACnB,OAAO,IAAI;;IAGb,IAAIC,KAAK,GAAWF,IAAI,CAACC,IAAI,CAACE,KAAK,IAAI,CAAC,GAAG,OAAO,GAAG,OAAO;IAC5D,IAAIC,IAAI,GAAWf,QAAQ,CAACW,IAAI,CAACC,IAAI,CAACI,IAAI,CAAC;IAE3C,OAAO,cAAcH,KAAK,IAAIE,IAAI,MAAM;EAC1C;;AAxBWb,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX3BpB,8BAAuB;MACnBA,+DAKM;MACVA,iBAAM;;;MANmBA,eAAQ;MAARA,mCAAQ","names":["X_axic","UnitType","i0","BoardComponent","constructor","boardService","ngOnInit","board","CreateBoard","TestX","x","GetUnitImage","cell","Unit","color","Color","type","Type","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Asus\\source\\repos\\Chess\\Chess.Angular\\ClientApp\\src\\app\\chess\\board\\board.component.ts","C:\\Users\\Asus\\source\\repos\\Chess\\Chess.Angular\\ClientApp\\src\\app\\chess\\board\\board.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { BoardCell } from '../models/boardCell';\nimport { BoardService } from './board.service';\nimport { X_axic } from '../models/cellPropeties';\nimport { UnitType } from '../models/chessUnit';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css']\n})\nexport class BoardComponent implements OnInit {\n\n  board : BoardCell[][];\n\n  constructor(private boardService: BoardService){\n  }\n\n  ngOnInit() {\n    this.board = this.boardService.CreateBoard();\n  }\n\n  TestX(x: number) : string{\n    return X_axic[x]\n  }\n\n  GetUnitImage(cell: BoardCell): string | null{\n    if(cell.Unit == null){\n      return null;\n    }\n\n    var color: string = cell.Unit.Color == 0 ? \"White\" : \"Black\"; \n    var type: string = UnitType[cell.Unit.Type]; \n\n    return `assets/img/${color}_${type}.png`;\n  }\n}\n","<div class=\"container\">\n    <div *ngFor=\"let row of board\" class=\"row\">\n        <div  *ngFor=\"let item of row\" class=\"text-center\" [class.cellWhite]=\"item.Color == 0\" [class.cellBlack]=\"item.Color == 1\">\n            <!-- {{(item.X)}} / {{item.Y}} -->\n            <img *ngIf=\"item.Unit != null\" [src]=\"GetUnitImage(item)\" class=\"imgCell\"/>\n        </div>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}