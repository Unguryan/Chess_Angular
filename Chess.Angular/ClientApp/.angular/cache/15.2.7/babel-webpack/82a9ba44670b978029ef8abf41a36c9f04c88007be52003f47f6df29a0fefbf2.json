{"ast":null,"code":"import { X_axic } from '../models/cellPropeties';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./board.service\";\nimport * as i2 from \"@angular/common\";\nfunction BoardComponent_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r2.TestX(item_r3.X), \" / \", item_r3.Y, \" \");\n  }\n}\nfunction BoardComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, BoardComponent_div_1_div_1_Template, 2, 2, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", row_r1);\n  }\n}\nexport class BoardComponent {\n  constructor(boardService) {\n    this.boardService = boardService;\n  }\n  ngOnInit() {\n    this.board = this.boardService.CreateBoard();\n  }\n  TestX(x) {\n    return X_axic[x];\n  }\n}\nBoardComponent.ɵfac = function BoardComponent_Factory(t) {\n  return new (t || BoardComponent)(i0.ɵɵdirectiveInject(i1.BoardService));\n};\nBoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BoardComponent,\n  selectors: [[\"app-board\"]],\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"container\"], [\"class\", \"row\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [\"class\", \"cell\", 4, \"ngFor\", \"ngForOf\"], [1, \"cell\"]],\n  template: function BoardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, BoardComponent_div_1_Template, 2, 1, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.board);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\".cell[_ngcontent-%COMP%] {\\r\\n    width: 50px;\\r\\n    height: 50px;\\r\\n    border: 1px solid grey;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2hlc3MvYm9hcmQvYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0lBQ1osc0JBQXNCO0FBQzFCIiwic291cmNlc0NvbnRlbnQiOlsiLmNlbGwge1xyXG4gICAgd2lkdGg6IDUwcHg7XHJcbiAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCBncmV5O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAASA,MAAM,QAAQ,yBAAyB;;;;;;ICDxCC,8BAA4C;IACxCA,YACJ;IAAAA,iBAAM;;;;;IADFA,eACJ;IADIA,0EACJ;;;;;IAHJA,8BAA2C;IACvCA,qEAEM;IACVA,iBAAM;;;;IAHqBA,eAAM;IAANA,gCAAM;;;ADQrC,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;EAChC;EAEAC,QAAQ;IACN,IAAI,CAACC,KAAK,GAAG,IAAI,CAACF,YAAY,CAACG,WAAW,EAAE;EAC9C;EAEAC,KAAK,CAACC,CAAS;IACb,OAAOT,MAAM,CAACS,CAAC,CAAC;EAClB;;AAbWP,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAQ;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV3Bb,8BAAuB;MACnBA,+DAIM;MACVA,iBAAM;;;MALmBA,eAAQ;MAARA,mCAAQ","names":["X_axic","i0","BoardComponent","constructor","boardService","ngOnInit","board","CreateBoard","TestX","x","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Asus\\source\\repos\\Chess\\Chess.Angular\\ClientApp\\src\\app\\chess\\board\\board.component.ts","C:\\Users\\Asus\\source\\repos\\Chess\\Chess.Angular\\ClientApp\\src\\app\\chess\\board\\board.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { BoardCell } from '../models/boardCell';\nimport { BoardService } from './board.service';\nimport { X_axic } from '../models/cellPropeties';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css']\n})\nexport class BoardComponent implements OnInit {\n\n  board : BoardCell[][];\n\n  constructor(private boardService: BoardService){\n  }\n\n  ngOnInit() {\n    this.board = this.boardService.CreateBoard();\n  }\n\n  TestX(x: number) : string{\n    return X_axic[x]\n  }\n}\n","<div class=\"container\">\n    <div *ngFor=\"let row of board\" class=\"row\">\n        <div  *ngFor=\"let item of row\" class=\"cell\">\n            {{TestX(item.X)}} / {{item.Y}}\n        </div>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}