{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { X_axic } from '../models/cellPropeties';\nimport { UnitType } from '../models/chessUnit';\nimport { moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nlet BoardComponent = class BoardComponent {\n  constructor(boardService) {\n    this.boardService = boardService;\n  }\n  ngOnInit() {\n    this.board = this.boardService.CreateBoard();\n  }\n  TestX(x) {\n    return X_axic[x];\n  }\n  GetUnitImage(cell) {\n    if (cell.Unit == null) {\n      return null;\n    }\n    var color = cell.Unit.Color == 0 ? \"White\" : \"Black\";\n    var type = UnitType[cell.Unit.Type];\n    return `assets/img/${color}_${type}.png`;\n  }\n  drop(event) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n    }\n  }\n};\nBoardComponent = __decorate([Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css']\n})], BoardComponent);\nexport { BoardComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAGjD,SAASC,MAAM,QAAQ,yBAAyB;AAChD,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,SAAuBC,eAAe,EAAEC,iBAAiB,QAAQ,wBAAwB;AAOlF,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YAAoBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;EAChC;EAEAC,QAAQ;IACN,IAAI,CAACC,KAAK,GAAG,IAAI,CAACF,YAAY,CAACG,WAAW,EAAE;EAC9C;EAEAC,KAAK,CAACC,CAAS;IACb,OAAOX,MAAM,CAACW,CAAC,CAAC;EAClB;EAEAC,YAAY,CAACC,IAAe;IAC1B,IAAGA,IAAI,CAACC,IAAI,IAAI,IAAI,EAAC;MACnB,OAAO,IAAI;;IAGb,IAAIC,KAAK,GAAWF,IAAI,CAACC,IAAI,CAACE,KAAK,IAAI,CAAC,GAAG,OAAO,GAAG,OAAO;IAC5D,IAAIC,IAAI,GAAWhB,QAAQ,CAACY,IAAI,CAACC,IAAI,CAACI,IAAI,CAAC;IAE3C,OAAO,cAAcH,KAAK,IAAIE,IAAI,MAAM;EAC1C;EAGAE,IAAI,CAACC,KAA+B;IAClC,IAAIA,KAAK,CAACC,iBAAiB,KAAKD,KAAK,CAACE,SAAS,EAAE;MAC/CpB,eAAe,CAACkB,KAAK,CAACE,SAAS,CAACC,IAAI,EAAEH,KAAK,CAACI,aAAa,EAAEJ,KAAK,CAACK,YAAY,CAAC;KAC/E,MAAM;MACLtB,iBAAiB,CACfiB,KAAK,CAACC,iBAAiB,CAACE,IAAI,EAC5BH,KAAK,CAACE,SAAS,CAACC,IAAI,EACpBH,KAAK,CAACI,aAAa,EACnBJ,KAAK,CAACK,YAAY,CACnB;;EAEL;CACD;AAvCYrB,cAAc,eAL1BL,SAAS,CAAC;EACT2B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACWxB,cAAc,CAuC1B;SAvCYA,cAAc","names":["Component","X_axic","UnitType","moveItemInArray","transferArrayItem","BoardComponent","constructor","boardService","ngOnInit","board","CreateBoard","TestX","x","GetUnitImage","cell","Unit","color","Color","type","Type","drop","event","previousContainer","container","data","previousIndex","currentIndex","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Asus\\source\\repos\\Chess\\Chess.Angular\\ClientApp\\src\\app\\chess\\board\\board.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { BoardCell } from '../models/boardCell';\nimport { BoardService } from './board.service';\nimport { X_axic } from '../models/cellPropeties';\nimport { UnitType } from '../models/chessUnit';\nimport {  CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css']\n})\nexport class BoardComponent implements OnInit {\n\n  board : BoardCell[][];\n\n  constructor(private boardService: BoardService){\n  }\n\n  ngOnInit() {\n    this.board = this.boardService.CreateBoard();\n  }\n\n  TestX(x: number) : string{\n    return X_axic[x]\n  }\n\n  GetUnitImage(cell: BoardCell): string | null{\n    if(cell.Unit == null){\n      return null;\n    }\n\n    var color: string = cell.Unit.Color == 0 ? \"White\" : \"Black\"; \n    var type: string = UnitType[cell.Unit.Type]; \n\n    return `assets/img/${color}_${type}.png`;\n  }\n\n\n  drop(event: CdkDragDrop<BoardCell[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex,\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}